name: Node.js CI and Vercel Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Check Environment Variables
        run: |
          echo "AUTH_SECRET is set: $([ -n "$AUTH_SECRET" ] && echo true || echo false)"
          echo "AUTH_GOOGLE_ID is set: $([ -n "$AUTH_GOOGLE_ID" ] && echo true || echo false)"
          echo "AUTH_GOOGLE_SECRET is set: $([ -n "$AUTH_GOOGLE_SECRET" ] && echo true || echo false)"
          echo "NEXTAUTH_URL is set: $([ -n "$NEXTAUTH_URL" ] && echo true || echo false)"
          echo "DATABASE_URL is set: $([ -n "$DATABASE_URL" ] && echo true || echo false)"
          echo "RAZORPAY_KEY_ID is set: $([ -n "$RAZORPAY_KEY_ID" ] && echo true || echo false)"
          echo "RAZORPAY_KEY_SECRET is set: $([ -n "$RAZORPAY_KEY_SECRET" ] && echo true || echo false)"
          echo "ADMIN_EMAIL is set: $([ -n "$ADMIN_EMAIL" ] && echo true || echo false)"
          echo "RESEND_API_KEY is set: $([ -n "$RESEND_API_KEY" ] && echo true || echo false)"
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET: ${{ secrets.RAZORPAY_KEY_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

      - name: Build Project
        run: npm run build
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET: ${{ secrets.RAZORPAY_KEY_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
        
      - name: Add Comment to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const deployUrl = `${{ steps.deploy.outputs.url }}`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `âœ… Vercel Preview Deployment is ready! [Preview URL](${deployUrl})`
            });

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
        
      - name: Comment Production Deployment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployUrl = `${{ steps.deploy.outputs.url }}`;
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸš€ Production deployment completed! [Production URL](${deployUrl})`
            });